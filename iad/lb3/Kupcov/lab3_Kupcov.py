# -*- coding: utf-8 -*-
"""lab3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dDAwb_tNNxzt-vqKEiElaaCjEivlzvRp
"""

import numpy as np
import cv2
from deepface import DeepFace
from matplotlib import pyplot as plt
import pylab
import PIL

kianu_arr = ['/content/drive/MyDrive/face_lab/kianu.jpg',
             '/content/drive/MyDrive/face_lab/kianu2.jpg',
             '/content/drive/MyDrive/face_lab/kianu3.jpg',
             '/content/drive/MyDrive/face_lab/kianu4.jpg',
             '/content/drive/MyDrive/face_lab/kianu5.jpg']

def print_img(path):
  image = cv2.imread(path)
  plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))

"""Детектирование лица с помощью OpenCV haar cascade"""

def face_detect_cascade (image_path):
    image = cv2.imread(image_path)
    grey = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    face_cascade = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
    faces = face_cascade.detectMultiScale(grey, 1.3, 5)
    for (x,y,w,h) in faces:
        cv2.rectangle(image,(x,y),(x+w,y+h),(255,0,0),2)
    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))

face_detect_cascade(kianu_arr[0])

face_detect_cascade(kianu_arr[1])

face_detect_cascade(kianu_arr[2])

face_detect_cascade(kianu_arr[3])

face_detect_cascade(kianu_arr[4])

face_detect_cascade('/content/drive/MyDrive/face_lab/leo.jpg')

face_detect_cascade('/content/drive/MyDrive/face_lab/emma.jpg')

"""Детектирование лица с помощью DeepFace"""

def detect_face_deepface(image_path):
  try:
    detected_face = DeepFace.detectFace(image_path, detector_backend = 'opencv')
    plt.imshow(detected_face)
  except ValueError:
    print('Face could not be detected.')

detect_face_deepface(kianu_arr[0])

detect_face_deepface(kianu_arr[1])

detect_face_deepface(kianu_arr[2])

detect_face_deepface('/content/drive/MyDrive/face_lab/leo.jpg')

"""Сравнение лиц"""

def verify_face (img1, img2):
  result = DeepFace.verify(img1, img2, distance_metric='euclidean', model_name='VGG-Face', detector_backend='opencv')
  verified = bool(result['verified'])
  if not verified:
    print('Разные люди (но это не точно)')
  else:
    print('На фото один и тот же человек (но это не точно)')

print_img(kianu_arr[0])

print_img(kianu_arr[1])

verify_face (kianu_arr[0], kianu_arr[1])

print_img('/content/drive/MyDrive/face_lab/leo.jpg')

verify_face (kianu_arr[0], '/content/drive/MyDrive/face_lab/leo.jpg')

print_img('/content/drive/MyDrive/face_lab/emma.jpg')

verify_face (kianu_arr[0], '/content/drive/MyDrive/face_lab/emma.jpg')